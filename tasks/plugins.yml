---
# http://help.eclipse.org/juno/index.jsp?topic=/org.eclipse.platform.doc.isv/guide/p2_director.html
- name: create plugins install command
  set_fact:
    plugin_install_command: "{{ eclipse_unpack_dir }}/eclipse -nosplash \
      -application org.eclipse.equinox.p2.director \
      -destination {{ eclipse_unpack_dir}} \
      {{ '-p2.os '   ~ eclipse_os  if eclipse_os  }} \
      {{ '-p2.ws '   ~ eclipse_gui if eclipse_gui }} \
      {{ '-p2.arch ' ~ ansible_architecture if ansible_architecture }}"
  tags: [eclipse_plugins]

#Pydev
- name: install pydev certificate
  include: import_pydev_cert.yml
  when: ('pydev' in eclipse_plugins_install)
  tags: [eclipse_plugins]

#Subclipse
- name: Install JavaHL for subclipse
  package:
    name:  "{{ item }}"
    state: present
  with_items:
    - libsvn-java
  when: (ansible_distribution == 'Debian') and
        ('subclipse' in eclipse_plugins_install)
  tags: [eclipse_plugins]

- name: commbine dict of default and custom plugins (custom overwrites defaults with the same key)
  set_fact:
    eclipse_plugin_dict: "{{ eclipse_defaults.plugins | combine(eclipse_plugins_custom) }}"
  tags: [eclipse_plugins]

- name: check that all eclipse_plugins_install are valid
  fail:
    msg: "unknown plugin names in eclipse_plugins_install: {{ eclipse_plugins_install|difference(eclipse_plugin_dict.keys()) }}; use any of: {{ eclipse_plugin_dict.keys() }}"
  when: (eclipse_plugins_install|difference(eclipse_plugin_dict.keys())|length > 0)
  tags: [eclipse_plugins]

#- name: creat list of plugins to install
#  set_fact:
#    eclipse_plugin_install_list: "{{ eclipse_plugins_install | map('extract', eclipse_plugin_dict) | list }}"
#  tags: [eclipse_plugins]

# all plugins
- include: single_plugin.yml
  with_items: '{{ eclipse_plugins_install | difference(eclipse_plugins_uninstall) | unique }}'
  when: (eclipse_plugin_dict[item] is defined)
  tags: [eclipse_plugins]

- name: check that all eclipse_plugins_uninstall are valid
  fail:
    msg: "unknown plugin names in eclipse_plugins_uninstall: {{ eclipse_plugins_uninstall|difference(eclipse_plugin_dict.keys()) }}; use any of: {{ eclipse_plugin_dict.keys() }}"
  when: (eclipse_plugins_uninstall|difference(eclipse_plugin_dict.keys())|length > 0)
  tags: [eclipse_plugins]

  # uninstall plugins
- include: single_plugin_uninstall.yml
  with_items: '{{ eclipse_plugins_uninstall | unique }}'
  when: (eclipse_plugin_dict[item] is defined)
  tags: [eclipse_plugins]
